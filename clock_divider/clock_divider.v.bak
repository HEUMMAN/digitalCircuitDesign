module clock_divider(rst, clk, y0, y1, y2, y3);
	input rst, clk;
	output reg y0, y1, y2, y3, y4;
	
	reg [3:0] st_c, st_n, y_temp;
	reg temp_state;
	parameter s0 = 3'b110, s1 = 3'b010, s2 = 3'b111, s3 = 3'b011, s4 = 3'b101, s5 = 3'b001;
	
	always @(posedge clk, negedge rst)
	begin
	if (!rst) st_c <= s0;
	else st_c <= st_n;
	end
	
	always @(st_c) begin
	case(st_c)
		s0: begin y_temp = s0; st_n = s1; end
		s1: begin y_temp = s1; st_n = s2; end
		s2: begin y_temp = s2; st_n = s3; end
		s3: begin y_temp = s3; st_n = s4; end
		s4: begin y_temp = s4; st_n = s5; end
		default: begin y_temp = s5; st_n = s0; end
		endcase
		
	y0 = y_temp[3];
	y1 = y_temp[2];
	y2 = y_yemp[1];
	y3 = y_temp[0];
	end
endmodule